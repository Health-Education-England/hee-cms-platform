name: CI & CD [MASTER]

on:
  push:
    branches:
      - master
env:
  BRC_STACK_NAME: hee
  # BRC_MAX_DISTRIBUTIONS: 90
  BRC_DISTRIBUTION_DELETE_COUNT: 10

jobs:
  buildAndTest:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Configure maven settings
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          repositories: '[{ "id": "hippo-maven2-enterprise", "url": "https://maven.bloomreach.com/repository/maven2-enterprise/" }]'
          plugin_repositories: '[{ "id": "hippo-maven2-enterprise", "url": "https://maven.bloomreach.com/repository/maven2-enterprise/" }]'
          servers: '[{ "id": "hippo-maven2-enterprise", "username": "${{ secrets.BLOOMREACH_MVN_USERNAME }}", "password": "${{ secrets.BLOOMREACH_MVN_PASSWORD }}" }]'

      - name: Compile
        run: mvn -B clean compile -Pdefault --file pom.xml

      - name: Test
        run: mvn -B clean test -Pdefault --file pom.xml

  deploy-to-dev:
    name: Deploy to Dev Env. [on brCloud]    
    needs: buildAndTest
    environment: development

    env:
      BRC_ENV_NAME: development

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Configure maven settings
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          repositories: '[{ "id": "hippo-maven2-enterprise", "url": "https://maven.bloomreach.com/repository/maven2-enterprise/" }]'
          plugin_repositories: '[{ "id": "hippo-maven2-enterprise", "url": "https://maven.bloomreach.com/repository/maven2-enterprise/" }]'
          servers: '[{ "id": "hippo-maven2-enterprise", "username": "${{ secrets.BLOOMREACH_MVN_USERNAME }}", "password": "${{ secrets.BLOOMREACH_MVN_PASSWORD }}" }]'

      - name: Package
        run: mvn -B verify && mvn -Pdist -Denv=${{ env.BRC_ENV_NAME }} --file pom.xml

      - name: Setting distribution path (distPath) as an output parameter
        id: dist
        run: echo "distPath=$(ls -1 ${{ github.workspace }}/target/$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)-$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)-$(git rev-parse --short "$GITHUB_SHA")-${{ env.BRC_ENV_NAME }}-*.tar.gz)" >> $GITHUB_OUTPUT

      - name: Clean up/delete distributions when Bloomreach Cloud hits maximum distributions
        uses: Health-Education-England/cleanup-distributions-from-BR-Cloud-action@v1.3
        id: cleanup
        with:
          brcStack: ${{ env.BRC_STACK_NAME }}
          username: ${{ secrets.BRC_USERNAME }}
          password: ${{ secrets.BRC_PASSWORD }}
          # maxDistributions: ${{ env.BRC_MAX_DISTRIBUTIONS }}
          distributionsDeleteCount: ${{ env.BRC_DISTRIBUTION_DELETE_COUNT }}
      - name: Upload distribution to Bloomreach Cloud
        uses: Health-Education-England/upload-distribution-to-BR-Cloud-action@v1.3
        id: upload
        with:
          brcStack: ${{ env.BRC_STACK_NAME }}
          username: ${{ secrets.BRC_USERNAME }}
          password: ${{ secrets.BRC_PASSWORD }}
          distPath: ${{ steps.dist.outputs.distPath }}
      - name: Deploy distribution to 'development' env
        uses: Health-Education-England/deploy-distribution-to-BR-Cloud-action@v1.4
        id: deploy
        with:
          brcStack: ${{ env.BRC_STACK_NAME }}
          username: ${{ secrets.BRC_USERNAME }}
          password: ${{ secrets.BRC_PASSWORD }}
          distId: ${{ steps.upload.outputs.distId }}
          envName: ${{ env.BRC_ENV_NAME }}
          configFilesAsSystemProperties: 'hee-platform.properties'

  deploy-to-test:
    name: Deploy to Test Env. [on brCloud]
    if: ${{ false }}
    needs: [buildAndTest, deploy-to-dev]
    environment: test

    env:
      BRC_ENV_NAME: test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Configure maven settings
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          repositories: '[{ "id": "hippo-maven2-enterprise", "url": "https://maven.bloomreach.com/repository/maven2-enterprise/" }]'
          plugin_repositories: '[{ "id": "hippo-maven2-enterprise", "url": "https://maven.bloomreach.com/repository/maven2-enterprise/" }]'
          servers: '[{ "id": "hippo-maven2-enterprise", "username": "${{ secrets.BLOOMREACH_MVN_USERNAME }}", "password": "${{ secrets.BLOOMREACH_MVN_PASSWORD }}" }]'

      - name: Package
        run: mvn -B verify && mvn -Pdist -Denv=${{ env.BRC_ENV_NAME }} --file pom.xml

      - name: Setting distribution path (distPath) as an output parameter
        id: dist
        run: echo "distPath=$(ls -1 ${{ github.workspace }}/target/$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)-$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)-$(git rev-parse --short "$GITHUB_SHA")-${{ env.BRC_ENV_NAME }}-*.tar.gz)" >> $GITHUB_OUTPUT

      - name: Clean up/delete distributions when Bloomreach Cloud hits maximum distributions
        uses: Health-Education-England/cleanup-distributions-from-BR-Cloud-action@v1.3
        id: cleanup
        with:
          brcStack: ${{ env.BRC_STACK_NAME }}
          username: ${{ secrets.BRC_USERNAME }}
          password: ${{ secrets.BRC_PASSWORD }}
          # maxDistributions: ${{ env.BRC_MAX_DISTRIBUTIONS }}
          distributionsDeleteCount: ${{ env.BRC_DISTRIBUTION_DELETE_COUNT }}
      - name: Upload distribution to Bloomreach Cloud
        uses: Health-Education-England/upload-distribution-to-BR-Cloud-action@v1.3
        id: upload
        with:
          brcStack: ${{ env.BRC_STACK_NAME }}
          username: ${{ secrets.BRC_USERNAME }}
          password: ${{ secrets.BRC_PASSWORD }}
          distPath: ${{ steps.dist.outputs.distPath }}
      - name: Deploy distribution to 'test' env
        uses: Health-Education-England/deploy-distribution-to-BR-Cloud-action@v1.4
        id: deploy
        with:
          brcStack: ${{ env.BRC_STACK_NAME }}
          username: ${{ secrets.BRC_USERNAME }}
          password: ${{ secrets.BRC_PASSWORD }}
          distId: ${{ steps.upload.outputs.distId }}
          envName: ${{ env.BRC_ENV_NAME }}
          configFilesAsSystemProperties: 'hee-platform.properties'

  deploy-to-staging:
    name: Deploy to Staging Env. [on brCloud]
    # needs: [buildAndTest, deploy-to-dev, deploy-to-test]
    # needs: [buildAndTest, deploy-to-dev] # disable as isolating development environment from workflow
    needs: [buildAndTest]
    environment: staging

    env:
      BRC_ENV_NAME: staging

    runs-on: ubuntu-latest

    steps:
      - name: Check out repo.
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Configure maven settings
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          repositories: '[{ "id": "hippo-maven2-enterprise", "url": "https://maven.bloomreach.com/repository/maven2-enterprise/" }]'
          plugin_repositories: '[{ "id": "hippo-maven2-enterprise", "url": "https://maven.bloomreach.com/repository/maven2-enterprise/" }]'
          servers: '[{ "id": "hippo-maven2-enterprise", "username": "${{ secrets.BLOOMREACH_MVN_USERNAME }}", "password": "${{ secrets.BLOOMREACH_MVN_PASSWORD }}" }]'

      - name: Package
        run: mvn -B verify && mvn -Pdist -Denv=${{ env.BRC_ENV_NAME }} --file pom.xml

      - name: Setting distribution path (distPath) as an output parameter
        id: dist
        run: echo "distPath=$(ls -1 ${{ github.workspace }}/target/$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)-$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)-$(git rev-parse --short "$GITHUB_SHA")-${{ env.BRC_ENV_NAME }}-*.tar.gz)" >> $GITHUB_OUTPUT

      - name: Clean up/delete distributions when Bloomreach Cloud hits maximum distributions
        uses: Health-Education-England/cleanup-distributions-from-BR-Cloud-action@v1.3
        id: cleanup
        with:
          brcStack: ${{ env.BRC_STACK_NAME }}
          username: ${{ secrets.BRC_USERNAME }}
          password: ${{ secrets.BRC_PASSWORD }}
          # maxDistributions: ${{ env.BRC_MAX_DISTRIBUTIONS }}
          distributionsDeleteCount: ${{ env.BRC_DISTRIBUTION_DELETE_COUNT }}
      - name: Upload distribution to Bloomreach Cloud
        uses: Health-Education-England/upload-distribution-to-BR-Cloud-action@v1.3
        id: upload
        with:
          brcStack: ${{ env.BRC_STACK_NAME }}
          username: ${{ secrets.BRC_USERNAME }}
          password: ${{ secrets.BRC_PASSWORD }}
          distPath: ${{ steps.dist.outputs.distPath }}
      - name: Deploy distribution to 'staging' env
        uses: Health-Education-England/deploy-distribution-to-BR-Cloud-action@v1.4
        id: deploy
        with:
          brcStack: ${{ env.BRC_STACK_NAME }}
          username: ${{ secrets.BRC_USERNAME }}
          password: ${{ secrets.BRC_PASSWORD }}
          distId: ${{ steps.upload.outputs.distId }}
          envName: ${{ env.BRC_ENV_NAME }}
          configFilesAsSystemProperties: 'hee-platform.properties'
